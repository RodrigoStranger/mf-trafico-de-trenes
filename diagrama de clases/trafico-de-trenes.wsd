@startuml trafico de trenes

class Tren {
    -id: nat1
    -tipo: seq of char <<carga|transporte>>
    -distanciaSeguridad: real
    +Tren(id: nat1, tipo: seq of char, distanciaSeguridad: real)
    +desacelerar(): ()
    +acelerar(): ()
    +frenar(): ()
}

class Sensor {
    #id: nat1
    #activo: bool
    +Sensor(id: nat1, activo: bool)
    +SetActivo(activo: bool): ()
    +enviarAlerta(alerta: Alerta): ()
}

class SensorEntreTrenes{
    -distanciaConTrenDelantero: real
    -existeTren : bool
    +SensorEntreTrenes(id: nat1, activo: bool, distanciaConTrenDelantero: real, existeTren : bool)
    +SetdistanciaConTrenDelantero(distancia: real): ()
    +SetexisteTren(existeTren : bool): ()
}

class SensorDeProximidad {
    -deteccion: bool
    -queSeDetecta: seq of char
    +SensorDeProximidad(id: nat1, activo: bool, deteccion: bool, queSeDetecta: seq of char)
    +deteccion(deteccion: bool): ()
}

class Alerta {
    -id: nat1
    -tipo: seq of char <<distancia corta|via con obstruccion>>
    -mensaje: seq of char
    -fecha: nat1 * nat1 * nat1
    -hora: nat * nat * nat
    +Alerta(id: nat1, tipo: seq of char, mensaje: seq of char, fechaHora: seq of char)
}

class SistemaControl {
    -nombre: seq of char
    +SistemaControl(nombre: seq of char)
    +emitirOrdenes(mensaje: seq of char): ()
    +CalibrarVelocidad(TrenAtras: Tren): ()
    +RecibirAlertas(): ()
}

Sensor <|-- SensorEntreTrenes
Sensor <|-- SensorDeProximidad

SistemaControl "1" o-- "1..*" Tren : gestiona
Sensor "1" -- "0..*" Alerta : genera
Sensor "2" -- "1" Tren
@enduml